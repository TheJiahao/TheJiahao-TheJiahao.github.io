---
import { getRelativeLocaleUrl } from "astro:i18n";
import type { ImageCardProps } from "components/molecules/ImageCard";
import { DEFAULT_LANGUAGE, SITE_DESCRIPTION, SITE_TITLE } from "config";
import { languageCodes as languages } from "localization";
import { getBlogs } from "utils/getBlogs";
import CollectionLayout from "layouts/CollectionLayout.astro";
import HomeSchema from "components/atoms/HomeSchema.astro";
import { getTranslation } from "utils/getTranslation";
import type { GetStaticPathsOptions, Page } from "astro";

export function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    return languages.flatMap((language) => {
        const blogs = getBlogs()
            .filter(({ data }) => data.language === language)
            .map(({ data, slug }) => ({
                ...data,
                url: getRelativeLocaleUrl(language, `posts/${slug}`),
            }))
            .sort((a, b) => +b.date - +a.date);

        return paginate(blogs, { params: { language }, pageSize: 5 });
    });
}

interface Props {
    page: Page<ImageCardProps>;
}

const { page } = Astro.props;

const language = Astro.currentLocale ?? DEFAULT_LANGUAGE;
const title = SITE_TITLE[language];
const description = SITE_DESCRIPTION[language];
const pagination = {
    currentPage: page.currentPage,
    previosUrl: page.url.prev,
    nextUrl: page.url.next,
};
---

<CollectionLayout
    {title}
    {description}
    name={getTranslation(language).blogList}
    items={page.data}
    {language}
    {languages}
    searchBox
    {pagination}
>
    <HomeSchema {title} {description} {language} slot="head" />
</CollectionLayout>
