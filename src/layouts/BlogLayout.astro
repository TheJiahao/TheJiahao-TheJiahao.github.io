---
import type { MarkdownHeading } from "astro";
import { Schema } from "astro-seo-schema";
import { getAbsoluteLocaleUrl } from "astro:i18n";
import BackButton from "components/atoms/BackButton";
import MathHeader from "components/atoms/MathHeader.astro";
import BlogFooter from "components/molecules/BlogFooter.astro";
import BlogHeader from "components/molecules/BlogHeader.astro";
import LinkList from "components/molecules/LinkList";
import Article from "components/organisms/Article.astro";
import CommentList from "components/organisms/CommentList";
import TableOfContents from "components/organisms/TableOfContents";
import { BLOG_IMAGE_PLACEHOLDER, SITE_LICENSE, SITE_OWNER } from "config";
import type { BlogData } from "interfaces/BlogData";
import BaseLayout from "layouts/BaseLayout.astro";
import ContentLayout from "layouts/partials/ContentLayout.astro";
import formatDate from "utils/formatDate";
import { getTranslation } from "utils/getTranslation";

type Props = BlogData & {
    headings: MarkdownHeading[];
};

const {
    title,
    description,
    date,
    image = BLOG_IMAGE_PLACEHOLDER,
    links,
    license,
    language,
    lastModified,
    headings,
    math,
    alternates,
} = Astro.props;
---

<BaseLayout {title} {description} {image} languages={alternates}>
    <Fragment slot="head">
        {math && <MathHeader />}

        <Schema
            item={{
                "@context": "https://schema.org",
                "@type": "BlogPosting",
                mainEntityOfPage: {
                    "@type": "WebPage",
                    "@id": Astro.url.href,
                },
                headline: title,
                description,
                image: image.src,
                datePublished: formatDate(date),
                dateModified: formatDate(lastModified),
                license: license || SITE_LICENSE.url,
                url: Astro.url.href,
                author: {
                    "@type": "Person",
                    name: SITE_OWNER,
                    url: getAbsoluteLocaleUrl(language, "/about"),
                },
                inLanguage: language,
            }}
        />
    </Fragment>

    <aside
        slot="left-sidebar"
        fixed
        top-0
        z-1
        p-lg
        lg="sticky h-screen justify-self-end"
    >
        <BackButton {language} />
    </aside>

    <ContentLayout>
        <main flex="~ col" gap-y-7>
            <Article>
                <BlogHeader
                    slot="header"
                    {title}
                    {description}
                    {date}
                    {image}
                />
                <slot />
                <BlogFooter
                    slot="footer"
                    {lastModified}
                    licenseText={license}
                />
            </Article>

            {
                links && (
                    <LinkList
                        {links}
                        aria-label={getTranslation(language).externalLinks}
                        className="card"
                    />
                )
            }

            <CommentList {language} client:idle />
        </main>
    </ContentLayout>

    <aside slot="right-sidebar" un-hidden lg="block sticky top-0 p-lg h-screen">
        {headings.length > 0 && <TableOfContents {headings} client:load />}
    </aside>
</BaseLayout>
